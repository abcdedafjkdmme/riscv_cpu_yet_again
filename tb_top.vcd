$date
	Tue Oct 15 20:02:40 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_top $end
$var wire 1 ! cpu_i_exec $end
$var wire 1 " mem_o_fin $end
$var wire 32 # mem_o_data [31:0] $end
$var wire 1 $ mem_o_busy $end
$var wire 1 % mem_i_we $end
$var wire 3 & mem_i_sel [2:0] $end
$var wire 1 ' mem_i_exec $end
$var wire 32 ( mem_i_data [31:0] $end
$var wire 32 ) mem_i_addr [31:0] $end
$var wire 1 * cpu_o_fin $end
$var parameter 32 + CLK_PERIOD $end
$var reg 1 , clk $end
$var reg 1 - reset $end
$scope module u_cpu $end
$var wire 32 . alu_i_a [31:0] $end
$var wire 1 / alu_i_arith_shift $end
$var wire 3 0 alu_i_branch_op [2:0] $end
$var wire 3 1 alu_i_op [2:0] $end
$var wire 1 2 alu_i_sub $end
$var wire 1 , i_clk $end
$var wire 1 ! i_exec $end
$var wire 1 - i_reset $end
$var wire 1 3 is_alu_instr $end
$var wire 32 4 u_instr_offset [31:0] $end
$var wire 32 5 store_instr_offset [31:0] $end
$var wire 32 6 rs2 [31:0] $end
$var wire 32 7 rs1 [31:0] $end
$var wire 32 8 rd [31:0] $end
$var wire 3 9 op [2:0] $end
$var wire 32 : load_instr_offset [31:0] $end
$var wire 32 ; jalr_instr_offset [31:0] $end
$var wire 1 < is_alu_reg_instr $end
$var wire 1 = is_alu_imm_instr $end
$var wire 3 > instr_sel [2:0] $end
$var wire 1 " i_fin $end
$var wire 32 ? i_data [31:0] $end
$var wire 1 $ i_busy $end
$var wire 3 @ branch_op [2:0] $end
$var wire 32 A branch_instr_offset [31:0] $end
$var wire 1 B alu_sub_or_arith_shift $end
$var wire 32 C alu_o_y [31:0] $end
$var wire 1 D alu_o_will_branch $end
$var wire 32 E alu_i_b [31:0] $end
$var parameter 32 F S_END_MEM_READ $end
$var parameter 32 G S_END_MEM_READ_INSTR $end
$var parameter 32 H S_END_MEM_WRITE_INSTR $end
$var parameter 32 I S_EXEC $end
$var parameter 32 J S_IDLE $end
$var parameter 32 K S_INC $end
$var parameter 32 L S_REQ_MEM_READ $end
$var reg 32 M instr [31:0] $end
$var reg 32 N o_addr [31:0] $end
$var reg 32 O o_data [31:0] $end
$var reg 1 * o_fin $end
$var reg 1 ' o_mem_exec $end
$var reg 3 P o_sel [2:0] $end
$var reg 1 % o_we $end
$var reg 32 Q pc [31:0] $end
$var integer 32 R r_state [31:0] $end
$scope begin genblk1[0] $end
$var wire 32 S reg_file_tmp [31:0] $end
$var parameter 2 T idx $end
$upscope $end
$scope begin genblk1[1] $end
$var wire 32 U reg_file_tmp [31:0] $end
$var parameter 2 V idx $end
$upscope $end
$scope begin genblk1[2] $end
$var wire 32 W reg_file_tmp [31:0] $end
$var parameter 3 X idx $end
$upscope $end
$scope begin genblk1[3] $end
$var wire 32 Y reg_file_tmp [31:0] $end
$var parameter 3 Z idx $end
$upscope $end
$scope begin genblk1[4] $end
$var wire 32 [ reg_file_tmp [31:0] $end
$var parameter 4 \ idx $end
$upscope $end
$scope begin genblk1[5] $end
$var wire 32 ] reg_file_tmp [31:0] $end
$var parameter 4 ^ idx $end
$upscope $end
$scope begin genblk1[6] $end
$var wire 32 _ reg_file_tmp [31:0] $end
$var parameter 4 ` idx $end
$upscope $end
$scope begin genblk1[7] $end
$var wire 32 a reg_file_tmp [31:0] $end
$var parameter 4 b idx $end
$upscope $end
$scope begin genblk1[8] $end
$var wire 32 c reg_file_tmp [31:0] $end
$var parameter 5 d idx $end
$upscope $end
$scope begin genblk1[9] $end
$var wire 32 e reg_file_tmp [31:0] $end
$var parameter 5 f idx $end
$upscope $end
$scope begin genblk1[10] $end
$var wire 32 g reg_file_tmp [31:0] $end
$var parameter 5 h idx $end
$upscope $end
$scope begin genblk1[11] $end
$var wire 32 i reg_file_tmp [31:0] $end
$var parameter 5 j idx $end
$upscope $end
$scope begin genblk1[12] $end
$var wire 32 k reg_file_tmp [31:0] $end
$var parameter 5 l idx $end
$upscope $end
$scope begin genblk1[13] $end
$var wire 32 m reg_file_tmp [31:0] $end
$var parameter 5 n idx $end
$upscope $end
$scope begin genblk1[14] $end
$var wire 32 o reg_file_tmp [31:0] $end
$var parameter 5 p idx $end
$upscope $end
$scope begin genblk1[15] $end
$var wire 32 q reg_file_tmp [31:0] $end
$var parameter 5 r idx $end
$upscope $end
$scope begin genblk1[16] $end
$var wire 32 s reg_file_tmp [31:0] $end
$var parameter 6 t idx $end
$upscope $end
$scope begin genblk1[17] $end
$var wire 32 u reg_file_tmp [31:0] $end
$var parameter 6 v idx $end
$upscope $end
$scope begin genblk1[18] $end
$var wire 32 w reg_file_tmp [31:0] $end
$var parameter 6 x idx $end
$upscope $end
$scope begin genblk1[19] $end
$var wire 32 y reg_file_tmp [31:0] $end
$var parameter 6 z idx $end
$upscope $end
$scope begin genblk1[20] $end
$var wire 32 { reg_file_tmp [31:0] $end
$var parameter 6 | idx $end
$upscope $end
$scope begin genblk1[21] $end
$var wire 32 } reg_file_tmp [31:0] $end
$var parameter 6 ~ idx $end
$upscope $end
$scope begin genblk1[22] $end
$var wire 32 !" reg_file_tmp [31:0] $end
$var parameter 6 "" idx $end
$upscope $end
$scope begin genblk1[23] $end
$var wire 32 #" reg_file_tmp [31:0] $end
$var parameter 6 $" idx $end
$upscope $end
$scope begin genblk1[24] $end
$var wire 32 %" reg_file_tmp [31:0] $end
$var parameter 6 &" idx $end
$upscope $end
$scope begin genblk1[25] $end
$var wire 32 '" reg_file_tmp [31:0] $end
$var parameter 6 (" idx $end
$upscope $end
$scope begin genblk1[26] $end
$var wire 32 )" reg_file_tmp [31:0] $end
$var parameter 6 *" idx $end
$upscope $end
$scope begin genblk1[27] $end
$var wire 32 +" reg_file_tmp [31:0] $end
$var parameter 6 ," idx $end
$upscope $end
$scope begin genblk1[28] $end
$var wire 32 -" reg_file_tmp [31:0] $end
$var parameter 6 ." idx $end
$upscope $end
$scope begin genblk1[29] $end
$var wire 32 /" reg_file_tmp [31:0] $end
$var parameter 6 0" idx $end
$upscope $end
$scope begin genblk1[30] $end
$var wire 32 1" reg_file_tmp [31:0] $end
$var parameter 6 2" idx $end
$upscope $end
$scope begin genblk1[31] $end
$var wire 32 3" reg_file_tmp [31:0] $end
$var parameter 6 4" idx $end
$upscope $end
$scope module u_alu $end
$var wire 32 5" i_a [31:0] $end
$var wire 1 / i_arith_shift $end
$var wire 32 6" i_b [31:0] $end
$var wire 3 7" i_branch_op [2:0] $end
$var wire 3 8" i_op [2:0] $end
$var wire 1 2 i_sub $end
$var reg 1 D o_will_branch $end
$var reg 32 9" o_y [31:0] $end
$upscope $end
$upscope $end
$scope module u_mem $end
$var wire 32 :" i_addr [31:0] $end
$var wire 1 , i_clk $end
$var wire 32 ;" i_data [31:0] $end
$var wire 1 ' i_exec $end
$var wire 1 - i_reset $end
$var wire 3 <" i_sel [2:0] $end
$var wire 1 % i_we $end
$var wire 32 =" word_addr [31:0] $end
$var parameter 32 >" S_IDLE $end
$var parameter 32 ?" S_READ $end
$var parameter 32 @" S_WRITE $end
$var reg 1 $ o_busy $end
$var reg 32 A" o_data [31:0] $end
$var reg 1 " o_fin $end
$var integer 32 B" r_state [31:0] $end
$scope begin test_mem[0] $end
$var wire 32 C" tmp_mem_array [31:0] $end
$var parameter 2 D" idx $end
$upscope $end
$scope begin test_mem[1] $end
$var wire 32 E" tmp_mem_array [31:0] $end
$var parameter 2 F" idx $end
$upscope $end
$scope begin test_mem[2] $end
$var wire 32 G" tmp_mem_array [31:0] $end
$var parameter 3 H" idx $end
$upscope $end
$scope begin test_mem[3] $end
$var wire 32 I" tmp_mem_array [31:0] $end
$var parameter 3 J" idx $end
$upscope $end
$scope begin test_mem[4] $end
$var wire 32 K" tmp_mem_array [31:0] $end
$var parameter 4 L" idx $end
$upscope $end
$scope begin test_mem[5] $end
$var wire 32 M" tmp_mem_array [31:0] $end
$var parameter 4 N" idx $end
$upscope $end
$scope begin test_mem[6] $end
$var wire 32 O" tmp_mem_array [31:0] $end
$var parameter 4 P" idx $end
$upscope $end
$scope begin test_mem[7] $end
$var wire 32 Q" tmp_mem_array [31:0] $end
$var parameter 4 R" idx $end
$upscope $end
$scope begin test_mem[8] $end
$var wire 32 S" tmp_mem_array [31:0] $end
$var parameter 5 T" idx $end
$upscope $end
$scope begin test_mem[9] $end
$var wire 32 U" tmp_mem_array [31:0] $end
$var parameter 5 V" idx $end
$upscope $end
$scope begin test_mem[10] $end
$var wire 32 W" tmp_mem_array [31:0] $end
$var parameter 5 X" idx $end
$upscope $end
$scope begin test_mem[11] $end
$var wire 32 Y" tmp_mem_array [31:0] $end
$var parameter 5 Z" idx $end
$upscope $end
$scope begin test_mem[12] $end
$var wire 32 [" tmp_mem_array [31:0] $end
$var parameter 5 \" idx $end
$upscope $end
$scope begin test_mem[13] $end
$var wire 32 ]" tmp_mem_array [31:0] $end
$var parameter 5 ^" idx $end
$upscope $end
$scope begin test_mem[14] $end
$var wire 32 _" tmp_mem_array [31:0] $end
$var parameter 5 `" idx $end
$upscope $end
$scope begin test_mem[15] $end
$var wire 32 a" tmp_mem_array [31:0] $end
$var parameter 5 b" idx $end
$upscope $end
$scope begin test_mem[16] $end
$var wire 32 c" tmp_mem_array [31:0] $end
$var parameter 6 d" idx $end
$upscope $end
$scope begin test_mem[17] $end
$var wire 32 e" tmp_mem_array [31:0] $end
$var parameter 6 f" idx $end
$upscope $end
$scope begin test_mem[18] $end
$var wire 32 g" tmp_mem_array [31:0] $end
$var parameter 6 h" idx $end
$upscope $end
$scope begin test_mem[19] $end
$var wire 32 i" tmp_mem_array [31:0] $end
$var parameter 6 j" idx $end
$upscope $end
$scope begin test_mem[20] $end
$var wire 32 k" tmp_mem_array [31:0] $end
$var parameter 6 l" idx $end
$upscope $end
$scope begin test_mem[21] $end
$var wire 32 m" tmp_mem_array [31:0] $end
$var parameter 6 n" idx $end
$upscope $end
$scope begin test_mem[22] $end
$var wire 32 o" tmp_mem_array [31:0] $end
$var parameter 6 p" idx $end
$upscope $end
$scope begin test_mem[23] $end
$var wire 32 q" tmp_mem_array [31:0] $end
$var parameter 6 r" idx $end
$upscope $end
$scope begin test_mem[24] $end
$var wire 32 s" tmp_mem_array [31:0] $end
$var parameter 6 t" idx $end
$upscope $end
$scope begin test_mem[25] $end
$var wire 32 u" tmp_mem_array [31:0] $end
$var parameter 6 v" idx $end
$upscope $end
$scope begin test_mem[26] $end
$var wire 32 w" tmp_mem_array [31:0] $end
$var parameter 6 x" idx $end
$upscope $end
$scope begin test_mem[27] $end
$var wire 32 y" tmp_mem_array [31:0] $end
$var parameter 6 z" idx $end
$upscope $end
$scope begin test_mem[28] $end
$var wire 32 {" tmp_mem_array [31:0] $end
$var parameter 6 |" idx $end
$upscope $end
$scope begin test_mem[29] $end
$var wire 32 }" tmp_mem_array [31:0] $end
$var parameter 6 ~" idx $end
$upscope $end
$scope begin test_mem[30] $end
$var wire 32 !# tmp_mem_array [31:0] $end
$var parameter 6 "# idx $end
$upscope $end
$scope begin test_mem[31] $end
$var wire 32 ## tmp_mem_array [31:0] $end
$var parameter 6 $# idx $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 $#
b11110 "#
b11101 ~"
b11100 |"
b11011 z"
b11010 x"
b11001 v"
b11000 t"
b10111 r"
b10110 p"
b10101 n"
b10100 l"
b10011 j"
b10010 h"
b10001 f"
b10000 d"
b1111 b"
b1110 `"
b1101 ^"
b1100 \"
b1011 Z"
b1010 X"
b1001 V"
b1000 T"
b111 R"
b110 P"
b101 N"
b100 L"
b11 J"
b10 H"
b1 F"
b0 D"
b11 @"
b10 ?"
b1 >"
b11111 4"
b11110 2"
b11101 0"
b11100 ."
b11011 ,"
b11010 *"
b11001 ("
b11000 &"
b10111 $"
b10110 ""
b10101 ~
b10100 |
b10011 z
b10010 x
b10001 v
b10000 t
b1111 r
b1110 p
b1101 n
b1100 l
b1011 j
b1010 h
b1001 f
b1000 d
b111 b
b110 `
b101 ^
b100 \
b11 Z
b10 X
b1 V
b0 T
b1 L
b110 K
b0 J
b11 I
b101 H
b100 G
b10 F
b1010 +
$end
#0
$dumpvars
bx ##
bx !#
bx }"
bx {"
bx y"
bx w"
bx u"
bx s"
bx q"
bx o"
bx m"
bx k"
bx i"
bx g"
bx e"
bx c"
bx a"
bx _"
bx ]"
bx ["
bx Y"
bx W"
bx U"
bx S"
bx Q"
bx O"
bx M"
b1000000010001010000000010110011 K"
b1100010000010100110011 I"
b11100000000000001000010011 G"
b11111111100000000000000110010011 E"
b11010100000000000100010011 C"
b1 B"
bx A"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ="
bx <"
bx ;"
bx :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 3"
b0 1"
b0 /"
b0 -"
b0 +"
b0 )"
b0 '"
b0 %"
b0 #"
b0 !"
b0 }
b0 {
b0 y
b0 w
b0 u
b0 s
b0 q
b0 o
b0 m
b0 k
b0 i
b0 g
b0 e
b0 c
b0 a
b0 _
b0 ]
b0 [
b0 Y
b1111111111111111111111111110000 W
b0 U
b0 S
b0 R
b0 Q
bx P
bx O
bx N
b0 M
b0 E
1D
b0 C
0B
b0 A
b0 @
bx ?
b0 >
0=
0<
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
03
02
b0 1
b0 0
0/
b0 .
1-
0,
x*
bx )
bx (
x'
bx &
x%
x$
bx #
x"
1!
$end
#5
b0 ="
0$
b11110000111100001111000011110000 #
b11110000111100001111000011110000 ?
b11110000111100001111000011110000 A"
0"
b0 )
b0 N
b0 :"
b0 (
b0 O
b0 ;"
0'
0*
0%
b10 &
b10 P
b10 <"
1,
#10
0-
0,
#15
b1 R
1,
#20
0,
#25
b10 R
1'
1,
#30
0,
#35
b10 B"
1$
1,
#40
0,
#45
b1 B"
1"
b11010100000000000100010011 #
b11010100000000000100010011 ?
b11010100000000000100010011 A"
1,
#50
0,
#55
0D
b110101 C
b110101 9"
b100000110100 ;
b100010 A
b110101 E
b110101 6"
13
b10101 6
b10 8
b100010 5
b11010100000000000000000000 4
1=
b110101 :
b11 R
b11010100000000000100010011 M
0'
b11110000111100001111000011110000 #
b11110000111100001111000011110000 ?
b11110000111100001111000011110000 A"
0$
0"
1,
#60
0,
#65
b110 R
b110101 W
1,
#70
0,
#75
b0 R
1*
b100 Q
1,
#80
0,
#85
b1 R
0*
1,
#90
0,
#95
b1 ="
b10 R
1'
b100 )
b100 N
b100 :"
1,
#100
0,
#105
b10 B"
1$
1,
#110
0,
#115
b1 B"
1"
b11111111100000000000000110010011 #
b11111111100000000000000110010011 ?
b11111111100000000000000110010011 A"
1,
#120
0,
#125
b11111111111111111111111111111000 C
b11111111111111111111111111111000 9"
b11111111111100000000011111111000 ;
b11111111111111111111111111100010 A
b11000 6
b11 8
b11111111111111111111111111100011 5
b11111111111111111111111111111000 E
b11111111111111111111111111111000 6"
b11111111100000000000000000000000 4
b0 ="
b11111111111111111111111111111000 :
b11110000111100001111000011110000 #
b11110000111100001111000011110000 ?
b11110000111100001111000011110000 A"
0$
0"
b11 R
b11111111100000000000000110010011 M
0'
b0 )
b0 N
b0 :"
1,
#130
0,
#135
b110 R
b11111111111111111111111111111000 Y
1,
#140
0,
#145
b0 R
1*
b1000 Q
1,
#150
0,
#155
b1 R
0*
1,
#160
0,
#165
b10 ="
b10 R
1'
b1000 )
b1000 N
b1000 :"
1,
#170
0,
#175
b10 B"
1$
1,
#180
0,
#185
b1 B"
1"
b11100000000000001000010011 #
b11100000000000001000010011 ?
b11100000000000001000010011 A"
1,
#190
0,
#195
b111000 C
b111000 9"
b111000 ;
b100100 A
b100 8
b100100 5
b111000 E
b111000 6"
b11100000000000000000000000 4
b0 ="
b111000 :
b11 R
b11100000000000001000010011 M
0'
b0 )
b0 N
b0 :"
b11110000111100001111000011110000 #
b11110000111100001111000011110000 ?
b11110000111100001111000011110000 A"
0$
0"
1,
#200
0,
#205
b110 R
b111000 [
1,
#210
0,
#215
b0 R
1*
b1100 Q
1,
#220
0,
#225
b1 R
0*
1,
#230
0,
#235
b11 ="
b10 R
1'
b1100 )
b1100 N
b1100 :"
1,
#240
0,
#245
b10 B"
1$
1,
#250
0,
#255
b1 B"
1"
b1100010000010100110011 #
b1100010000010100110011 ?
b1100010000010100110011 A"
1,
#260
0,
#265
b101101 C
b101101 9"
b10000100000000010 ;
b1010 A
b110101 .
b110101 5"
b10 7
b11 6
b1010 8
b1010 5
b11111111111111111111111111111000 E
b11111111111111111111111111111000 6"
b1100010000000000000000 4
0=
1<
b0 ="
b11 :
b11110000111100001111000011110000 #
b11110000111100001111000011110000 ?
b11110000111100001111000011110000 A"
0$
0"
b11 R
b1100010000010100110011 M
0'
b0 )
b0 N
b0 :"
1,
#270
0,
#275
b110 R
b101101 g
1,
#280
0,
#285
b0 R
1*
b10000 Q
1,
#290
0,
#295
b1 R
0*
1,
#300
0,
#305
b100 ="
b10 R
1'
b10000 )
b10000 N
b10000 :"
1,
#310
0,
#315
b10 B"
1$
1,
#320
0,
#325
b1 B"
1"
b1000000010001010000000010110011 #
b1000000010001010000000010110011 ?
b1000000010001010000000010110011 A"
1,
#330
0,
#335
b111000 E
b111000 6"
b1010000010000000100 ;
b110000000000 A
b11111111111111111111111111110101 C
b11111111111111111111111111110101 9"
b101101 .
b101101 5"
b1010 7
b100 6
b1 8
b10000000001 5
b1000000010001010000000000000000 4
1/
12
1B
b0 ="
b10000000100 :
b11 R
b1000000010001010000000010110011 M
0'
b0 )
b0 N
b0 :"
b11110000111100001111000011110000 #
b11110000111100001111000011110000 ?
b11110000111100001111000011110000 A"
0$
0"
1,
#340
0,
#345
b110 R
b11111111111111111111111111110101 U
1,
#350
0,
#355
b0 R
1*
b10100 Q
1,
#360
0,
#365
b1 R
0*
1,
#370
0,
#375
b101 ="
b10 R
1'
b10100 )
b10100 N
b10100 :"
1,
#380
0,
#385
b10 B"
1$
1,
#390
0,
#395
b1 B"
1"
bx #
bx ?
bx A"
1,
#400
0,
#405
bx0 ;
bx0 A
bx E
bx 6"
x3
bx .
bx 5"
b0xxxxx 7
b0xxxxx 6
b0xxxxx 8
bx 5
bx000000000000 4
b0 C
b0 9"
x=
x<
x/
x2
xB
b0 ="
bx :
bx >
bx 0
bx 7"
bx @
bx 1
bx 8"
bx 9
b11110000111100001111000011110000 #
b11110000111100001111000011110000 ?
b11110000111100001111000011110000 A"
0$
0"
b11 R
bx M
0'
b0 )
b0 N
b0 :"
1,
#410
0,
#415
1,
#420
0,
#425
1,
#430
0,
#435
1,
#440
0,
#445
1,
#450
0,
#455
1,
#460
0,
#465
1,
#470
0,
#475
1,
#480
0,
#485
1,
#490
0,
#495
1,
#500
0,
#505
1,
#510
0,
#515
1,
#520
0,
#525
1,
#530
0,
#535
1,
#540
0,
#545
1,
#550
0,
#555
1,
#560
0,
#565
1,
#570
0,
#575
1,
#580
0,
#585
1,
#590
0,
#595
1,
#600
0,
#605
1,
#610
0,
#615
1,
#620
0,
#625
1,
#630
0,
#635
1,
#640
0,
#645
1,
#650
0,
#655
1,
#660
0,
#665
1,
#670
0,
#675
1,
#680
0,
#685
1,
#690
0,
#695
1,
#700
0,
#705
1,
#710
0,
#715
1,
#720
0,
#725
1,
#730
0,
#735
1,
#740
0,
#745
1,
#750
0,
#755
1,
#760
0,
#765
1,
#770
0,
#775
1,
#780
0,
#785
1,
#790
0,
#795
1,
#800
0,
#805
1,
#810
0,
#815
1,
#820
0,
#825
1,
#830
0,
#835
1,
#840
0,
#845
1,
#850
0,
#855
1,
#860
0,
#865
1,
#870
0,
#875
1,
#880
0,
#885
1,
#890
0,
#895
1,
#900
0,
#905
1,
#910
0,
#915
1,
#920
0,
#925
1,
#930
0,
#935
1,
#940
0,
#945
1,
#950
0,
#955
1,
#960
0,
#965
1,
#970
0,
#975
1,
#980
0,
#985
1,
#990
0,
#995
1,
#1000
0,
#1005
1,
#1010
0,
